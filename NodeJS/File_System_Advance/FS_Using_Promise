const { rejects } = require('assert');
const fs = require('fs');
const { resolve } = require('path');
const path = require('path');
let ans=null;

const file1 = path.join(__dirname, 'Files','input1.txt');
const file2 = path.join(__dirname, 'Files','input2.txt');
const out = path.join(__dirname, 'Files', 'output.txt');
function read1() {
    return new Promise((resolve, reject) => {
        fs.readFile(file1, (err, data) => {
            if (err)
                reject(err);
            resolve(data.toString().split('\n'));
        });
})
}
function read2() {
    return new Promise((resolve, reject) => {
        fs.readFile(file2, (err, data) => {
            if (err)
                reject(err);
            resolve(data.toString().split('\n'));
        });
})
}
function writeout(data) {
    return new Promise((resolve, reject) => {
        fs.writeFile(out, data, (err) => {
            if (err) reject(err);
            resolve();
        })
    })
}
read1().then((arr1) => {
    // console.log(arr1)
    ans = arr1;
    return read2();
}).then((arr2) => {
    // console.log(arr2);
    ans = ans.concat(arr2);
    ans.sort((a, b) => a - b);
    ans = ans.join('\n');
    return writeout(ans);
    // console.log(ans);
}).then(()=> {
    console.log("File Written"); 
}).catch((err) => {
    console.log(err);
})